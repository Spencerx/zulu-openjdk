Azul Zulu Alpine
================

The `zulu-openjdk-alpine` image includes Alpine-native Azul Zulu Builds of OpenJDK, which use the built-in musl libc functionality
and do not add glibc on top of the Alpine distribution.

[Azul Zulu Builds of OpenJDK][1] are fully tested, and TCK compliant builds of OpenJDK for Linux, Windows, and macOS operating systems.
For more information about Azul Zulu and how to use these Docker images, check:

  * [Azul documentation][2]
  * [azul/zulu-openjdk][3]


Tags and `Dockerfile` links
===========================

Most Recent
-----------

{% for version in versions -%}
  {% if 'jre' not in version -%}
    {% set keys = links[version].keys() | list %}
    {%- set values = links[version].values() | list %}
    {%- set url_split = (values)[0][1].split('/') %}
  * [`{{ (values)[-1][0] }}`, `{{ (values)[0][0] }}` (*{{ url_split[-2] }}/{{ url_split[-1] }})*][{{ (keys)[0] }}]
  {%- endif %}
{%- endfor %}

Previous
--------

Earlier Alpine Docker image tags of Azul Zulu for previous update releases of OpenJDK are as follows:

{% for version in versions -%}
  {% set items = links[version].items() %}
  * {% for item in items -%}
    [{{ item[1][0] }}][{{ item[0] }}],
  {% endfor %}
{%- endfor %}

**Note**: Some of these may use glibc and predate the move to musl libc.

References
==========

  [1]: https://www.azul.com/products/core/
  [2]: https://docs.azul.com/core/
  [3]: https://hub.docker.com/r/azul/zulu-openjdk

{% for major_ver, body in links.items() %}
  {% for (num, ver) in body.items() -%}
    [{{ num }}]: {{ ver[1] }}
  {% endfor -%}
{% endfor %}
